<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="farmermarket__test_8cpp" kind="file" language="C++">
    <compoundname>farmermarket_test.cpp</compoundname>
    <includes local="yes">gtest/gtest.h</includes>
    <includes local="yes">../../farmermarket/header/farmermarket.h</includes>
    <incdepgraph>
      <node id="3">
        <label>../../farmermarket/header/farmermarket.h</label>
      </node>
      <node id="1">
        <label>src/tests/farmermarket/farmermarket_test.cpp</label>
        <link refid="farmermarket__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_farmermarket_test" prot="public">FarmermarketTest</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" prot="public" static="no">
        <name>N</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="3" column="11" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, SaveandAuthenticateUserTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>SaveandAuthenticateUserTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="63" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a2e1a8b07125da8cff6b80524b7bb5502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, InvalidAuthenticateUserTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>InvalidAuthenticateUserTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="71" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a276ab0927d0dd447a79a76f49dfee7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, UserAuthenticationLoginTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>UserAuthenticationLoginTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="76" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a299e01a4c38cc92f52902d7ad7b31861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, UserAuthenticationInvalidLoginTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>UserAuthenticationInvalidLoginTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="86" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="86" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a45bafd79aa827c01e7fa5c5f7711b9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, UserAuthenticationRegisterTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>UserAuthenticationRegisterTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="96" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="96" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a5ebd5ff8906ed71f9cc4b7af4cccbcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, LoginGuestModeTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>LoginGuestModeTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="107" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ac189b4e00d388361a1188d1bc6500b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ExitUserAuthenticationTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ExitUserAuthenticationTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="116" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a2fdbe1cfc718088428def5f505056e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, UserAuthenticationInvalidInputTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>UserAuthenticationInvalidInputTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="125" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="125" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a999455f2f35e46c3183a35991ba64c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, HandlePointerSwap)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>HandlePointerSwap</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="137" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="137" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a74d1cf642aacbd0dbe38becf853febab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, HandleSorting)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>HandleSorting</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="147" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a14c57fb22686cfbb45d1d58cc6a3b80a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, FindElement)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>FindElement</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="157" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a6cac2242f62229a72d684c36f65431fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, SearchInArray)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>SearchInArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="165" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="165" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a2765df0da2dd353c058842e928888e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, VendorSearchTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>VendorSearchTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="172" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="172" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a2c63e48eec1aacb996bc3cdef61df59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, VendorNotFoundTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>VendorNotFoundTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="184" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="184" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a150d6f4ae9cff07249823071c7538988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ProductSearchTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ProductSearchTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="196" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="196" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a0e3ac2b612fe28ed65abe29d840ffaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ProductNotFoundTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ProductNotFoundTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="208" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="208" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a8882f8254ded0ae1447369583385d33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ListingInfosMenuValidOptionTest1)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ListingInfosMenuValidOptionTest1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="220" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="220" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a925768c43c3f33433234bcaf9d5308f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ListingInfosMenuValidOptionTest2)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ListingInfosMenuValidOptionTest2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="232" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="232" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1acddea23427c797743f4fe30386705a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ListingInfosMenuInvalidOptionTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ListingInfosMenuInvalidOptionTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="244" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="244" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a02326c595f1facad7c85fb55a2e28861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, ListingInfosMenuInvalidOptionTestWithNumber)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>ListingInfosMenuInvalidOptionTestWithNumber</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="256" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="256" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a4c18ba70f8fe3051d6e1aa57ce69c347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, InsertMinHeapWhenFullTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>InsertMinHeapWhenFullTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="268" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="268" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1adf44daea67ea82523b84e279d1ce2c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, RemoveMinWithReinsertionTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>RemoveMinWithReinsertionTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="290" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="290" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1afef0ebaa25c43693845f3d0e26a81989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, SaveProductSeasonTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>SaveProductSeasonTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="321" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="321" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a3d8c1226d43c0acf6645111b873dbf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, LoadProductSeasonsAndPrintTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>LoadProductSeasonsAndPrintTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="349" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="349" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1aeb261d522e3e265754519a64186e00f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, SeasonalProduceGuideTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>SeasonalProduceGuideTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="369" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="369" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ad3c209f4be3a8680078a7a37d301720f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, LongestCommonSubsequenceTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>LongestCommonSubsequenceTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="379" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="379" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a110bc9c8e32860e0726073783b8b54b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, MaxFunctionTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>MaxFunctionTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="433" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="433" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a78f67239848368e8e362d88375680f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, KnapsackFunctionTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>KnapsackFunctionTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="439" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="439" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a9ceed4f000d7f31d569c84109c88231a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, SuggestPurchasesTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>SuggestPurchasesTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="456" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="456" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a5c4f4dc3e905a1c2a5f08ab7a46a0627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, CompareProductsTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>CompareProductsTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="466" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="466" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1aa96529e61b0a8dad1d9d360f14853cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, CompareProductsTestInvalid)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>CompareProductsTestInvalid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="483" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="483" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a5c421f240eeb5b42eccf607e6f0bbbae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, BuyProductsTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>BuyProductsTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="500" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="500" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a0556d27bb7259cc11c5fb767413000a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, BuyProductsTestInvalid)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>BuyProductsTestInvalid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="517" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="517" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ae83270014b23af0216f9de9f1599edf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, BuyProductsTestLowBudget)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>BuyProductsTestLowBudget</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="535" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="535" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1af80dcf981bb7cc245da621a2a2f7c30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, PurchasingTransactionsAndPriceComparisonMenuTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>PurchasingTransactionsAndPriceComparisonMenuTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="553" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="553" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1af55bb12ef566f5866bb6c2efcefe1719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, PurchasingTransactionsAndPriceComparisonShoppingSuggestionGuestModeTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>PurchasingTransactionsAndPriceComparisonShoppingSuggestionGuestModeTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="564" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="564" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a1d2cdc3dc4f5b6851e0cffc2cd38a68a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, PurchasingTransactionsAndPriceComparisonBuyProductsTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>PurchasingTransactionsAndPriceComparisonBuyProductsTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="575" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="575" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ad7b8343d08f6ca9ddc61e38922d26346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, PurchasingTransactionsAndPriceComparisonBuyProductsGuestModeTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>PurchasingTransactionsAndPriceComparisonBuyProductsGuestModeTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="586" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="586" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1af7b18f8370fb4050786f10606b114fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, PurchasingTransactionsAndPriceComparisonInvalidOptionTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>PurchasingTransactionsAndPriceComparisonInvalidOptionTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="597" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="597" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a2955a6ed8421e045d723999f76256c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, RecursiveMatrixMultiply)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>RecursiveMatrixMultiply</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="608" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="608" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1aee23c79690fa02563c2aeee732487340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, MemorizedRecursiveReuseTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>MemorizedRecursiveReuseTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="639" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="639" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ae5f3e43f158a4aeed81f3d697c3809ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, DynamicProgrammingTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>DynamicProgrammingTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="652" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="652" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a408513e058aee5942fb7ec99f99b1c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, MarketInformationsTotalIncomeTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>MarketInformationsTotalIncomeTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="659" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="659" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1acf7f0a5eb349293973db95166fa33d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, MarketInformationsInvalidOptionTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>MarketInformationsInvalidOptionTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="669" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="669" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a7b63c339253440690207c7108e5a3769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, MainMenuTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>MainMenuTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="686" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="686" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>The main function of the test program. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command-line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of command-line argument strings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int The exit status of the program. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="704" column="5" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="704" bodyend="712"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../farmermarket/header/farmermarket.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>N<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_farmermarket_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6" refid="class_farmermarket_test_1af4ed341d8720135d3eee03c6f410389f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/><ref refid="class_farmermarket_test_1af4ed341d8720135d3eee03c6f410389f" kindref="member">item1</ref><sp/>=<sp/>{<sp/>20,<sp/></highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Fall&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="7" refid="class_farmermarket_test_1abc29aed1198e29ad708d1fc2cd1cf364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/><ref refid="class_farmermarket_test_1abc29aed1198e29ad708d1fc2cd1cf364" kindref="member">item2</ref><sp/>=<sp/>{<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="8" refid="class_farmermarket_test_1aba022c6393c9b83c4293e356e61309cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/><ref refid="class_farmermarket_test_1aba022c6393c9b83c4293e356e61309cd" kindref="member">item3</ref><sp/>=<sp/>{<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="9" refid="class_farmermarket_test_1a932ca365c0a532788ec7d32a478d8ce0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/><ref refid="class_farmermarket_test_1a932ca365c0a532788ec7d32a478d8ce0" kindref="member">item4</ref><sp/>=<sp/>{<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;Date&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Winter&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="10" refid="class_farmermarket_test_1ab41c0bee33799c143c4ba9cf4da9c9e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_farmermarket_test_1ab41c0bee33799c143c4ba9cf4da9c9e0" kindref="member">testFilename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestUsers.bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11" refid="class_farmermarket_test_1a59bc4f28f3c847118269a63ec8fd9bb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_farmermarket_test_1a59bc4f28f3c847118269a63ec8fd9bb6" kindref="member">inputTest</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;inputTest.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="class_farmermarket_test_1a8493ca7d23f24817b50221b564f430f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_farmermarket_test_1a8493ca7d23f24817b50221b564f430f8" kindref="member">outputTest</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;outputTest.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13" refid="class_farmermarket_test_1a3116c6bcff3d9a33df6730723959944e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a3116c6bcff3d9a33df6730723959944e" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initializeDP();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16" refid="class_farmermarket_test_1a0016e959eca974c84485fabf4f0a46b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a0016e959eca974c84485fabf4f0a46b8" kindref="member">TearDown</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove(<ref refid="class_farmermarket_test_1a59bc4f28f3c847118269a63ec8fd9bb6" kindref="member">inputTest</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove(<ref refid="class_farmermarket_test_1a8493ca7d23f24817b50221b564f430f8" kindref="member">outputTest</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove(<ref refid="class_farmermarket_test_1ab41c0bee33799c143c4ba9cf4da9c9e0" kindref="member">testFilename</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_farmermarket_test_1ab99fc3703a713ec8e572ccac671d1751" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1ab99fc3703a713ec8e572ccac671d1751" kindref="member">simulateUserInput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>userInput)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>fileinput<sp/>=<sp/>fopen(<ref refid="class_farmermarket_test_1a59bc4f28f3c847118269a63ec8fd9bb6" kindref="member">inputTest</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputs(userInput,<sp/>fileinput);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fileinput);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freopen(<ref refid="class_farmermarket_test_1a59bc4f28f3c847118269a63ec8fd9bb6" kindref="member">inputTest</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">,<sp/>stdin);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freopen(<ref refid="class_farmermarket_test_1a8493ca7d23f24817b50221b564f430f8" kindref="member">outputTest</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_farmermarket_test_1a7c3dec0cf610d3c932796dc12be78ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a7c3dec0cf610d3c932796dc12be78ae4" kindref="member">readOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>outputFilePath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>fileoutput<sp/>=<sp/>fopen(outputFilePath,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>charsRead<sp/>=<sp/>fread(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>bufferSize<sp/>-<sp/>1,<sp/>fileoutput);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fileoutput);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[charsRead]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_farmermarket_test_1a2b9730f01a1b5c0950b5fae48115fb6d" kindref="member">removeClearScreenCharsFromOutputFile</ref>(buffer);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_farmermarket_test_1a372025fa66a9407a95c904c332ac9b78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a372025fa66a9407a95c904c332ac9b78" kindref="member">resetStdinStdout</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(stdin);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freopen(</highlight><highlight class="stringliteral">&quot;CON&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freopen(</highlight><highlight class="stringliteral">&quot;CON&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>stdin);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freopen(</highlight><highlight class="stringliteral">&quot;/dev/tty&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freopen(</highlight><highlight class="stringliteral">&quot;/dev/tty&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>stdin);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_farmermarket_test_1a2b9730f01a1b5c0950b5fae48115fb6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a2b9730f01a1b5c0950b5fae48115fb6d" kindref="member">removeClearScreenCharsFromOutputFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*src)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*src<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>*src;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src++;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>SaveandAuthenticateUserTest)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>User<sp/>testUser<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;TestUser&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>saveUser(&amp;testUser,<sp/>testFilename);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result2<sp/>=<sp/>authenticateUser(</highlight><highlight class="stringliteral">&quot;TestUser&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal">,<sp/>testFilename);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(result2,<sp/>1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(result,<sp/>1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="farmermarket__test_8cpp_1a2e1a8b07125da8cff6b80524b7bb5502" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>InvalidAuthenticateUserTest)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result2<sp/>=<sp/>authenticateUser(</highlight><highlight class="stringliteral">&quot;TestUser&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal">,<sp/>testFilename);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(result2,<sp/>-1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="farmermarket__test_8cpp_1a276ab0927d0dd447a79a76f49dfee7ba" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>UserAuthenticationLoginTest)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\nEnes<sp/>Koy\n123456\n100\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>userAuthentication();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="farmermarket__test_8cpp_1a299e01a4c38cc92f52902d7ad7b31861" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>UserAuthenticationInvalidLoginTest)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\ninvalid<sp/>user\n123456\n100\n\n1\ninvalid<sp/>user\n123456\n100\n\n1\ninvalid<sp/>user\n123456\n100\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>userAuthentication();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(authResult);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="farmermarket__test_8cpp_1a45bafd79aa827c01e7fa5c5f7711b9cd" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>UserAuthenticationRegisterTest)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;2\nNew<sp/>User\n123456\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>userAuthentication();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="farmermarket__test_8cpp_1a5ebd5ff8906ed71f9cc4b7af4cccbcef" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>LoginGuestModeTest)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>userAuthentication();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="farmermarket__test_8cpp_1ac189b4e00d388361a1188d1bc6500b00" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ExitUserAuthenticationTest)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>userAuthentication();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(authResult);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="farmermarket__test_8cpp_1a2fdbe1cfc718088428def5f505056e5b" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>UserAuthenticationInvalidInputTest)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;invalid\n\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>userAuthentication();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(authResult);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="farmermarket__test_8cpp_1a999455f2f35e46c3183a35991ba64c61" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>HandlePointerSwap)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(swap(&amp;a,<sp/>&amp;b));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(b,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(a,<sp/></highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>free(a);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>free(b);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="farmermarket__test_8cpp_1a74d1cf642aacbd0dbe38becf853febab" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>HandleSorting)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>arr[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mango&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr[0]);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>quickSort(arr,<sp/>0,<sp/>n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(arr[0],<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(arr[1],<sp/></highlight><highlight class="stringliteral">&quot;banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(arr[2],<sp/></highlight><highlight class="stringliteral">&quot;mango&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(arr[3],<sp/></highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="farmermarket__test_8cpp_1a14c57fb22686cfbb45d1d58cc6a3b80a" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>FindElement)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>arr[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mango&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr[0]);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(binarySearch(arr,<sp/>0,<sp/>n<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;mango&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(binarySearch(arr,<sp/>0,<sp/>n<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(binarySearch(arr,<sp/>0,<sp/>n<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;notinthelist&quot;</highlight><highlight class="normal">),<sp/>-1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="farmermarket__test_8cpp_1a6cac2242f62229a72d684c36f65431fb" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>SearchInArray)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>arr[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mango&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arr[0]);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(searchAndPrintResult(arr,<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;banana&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(searchAndPrintResult(arr,<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;cherry&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="farmermarket__test_8cpp_1a2765df0da2dd353c058842e928888e5d" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>VendorSearchTest)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;Ahmet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>browseVendor();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="farmermarket__test_8cpp_1a2c63e48eec1aacb996bc3cdef61df59d" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>VendorNotFoundTest)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;NonExistingVendor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>browseVendor();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(authResult);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="farmermarket__test_8cpp_1a150d6f4ae9cff07249823071c7538988" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ProductSearchTest)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>searchProduct();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="farmermarket__test_8cpp_1a0e3ac2b612fe28ed65abe29d840ffaf6" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ProductNotFoundTest)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;NonExistingProduct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>searchProduct();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(authResult);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="farmermarket__test_8cpp_1a8882f8254ded0ae1447369583385d33c" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ListingInfosMenuValidOptionTest1)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\nAhmet\n\n3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>listingOfInfos();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="farmermarket__test_8cpp_1a925768c43c3f33433234bcaf9d5308f5" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ListingInfosMenuValidOptionTest2)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;2\nBanana\n\n3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>listingOfInfos();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="farmermarket__test_8cpp_1acddea23427c797743f4fe30386705a1d" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ListingInfosMenuInvalidOptionTest)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;invalid\n\n3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>listingOfInfos();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="farmermarket__test_8cpp_1a02326c595f1facad7c85fb55a2e28861" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>ListingInfosMenuInvalidOptionTestWithNumber)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;5\n\n3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authResult<sp/>=<sp/>listingOfInfos();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(authResult);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="farmermarket__test_8cpp_1a4c18ba70f8fe3051d6e1aa57ce69c347" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>InsertMinHeapWhenFullTest)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>MinHeap<sp/>heap;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>initMinHeap(&amp;heap);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>up<sp/>the<sp/>heap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_SIZE;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProductSeason<sp/>item<sp/>=<sp/>{<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;Product&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Season&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertMinHeap(&amp;heap,<sp/>item);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(heap.size,<sp/>MAX_SIZE);<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>heap<sp/>is<sp/>indeed<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>inserting<sp/>into<sp/>a<sp/>full<sp/>heap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/>newItem<sp/>=<sp/>{<sp/>MAX_SIZE<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;NewProduct&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NewSeason&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>insertMinHeap(&amp;heap,<sp/>newItem);<sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>not<sp/>insert<sp/>the<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>size<sp/>has<sp/>not<sp/>changed<sp/>and<sp/>the<sp/>heap<sp/>property<sp/>is<sp/>maintained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(heap.size,<sp/>MAX_SIZE);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>the<sp/>heap<sp/>content<sp/>remains<sp/>unchanged,<sp/>e.g.,<sp/>by<sp/>checking<sp/>the<sp/>last<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(heap.items[heap.size<sp/>-<sp/>1].price,<sp/>MAX_SIZE<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="farmermarket__test_8cpp_1adf44daea67ea82523b84e279d1ce2c0f" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>RemoveMinWithReinsertionTest)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>MinHeap<sp/>heap;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>initMinHeap(&amp;heap);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>items<sp/>into<sp/>the<sp/>MinHeap<sp/>in<sp/>such<sp/>a<sp/>way<sp/>that<sp/>the<sp/>last<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>have<sp/>to<sp/>be<sp/>reinserted<sp/>higher<sp/>up<sp/>than<sp/>the<sp/>bottom<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/>itemsToInsert[]<sp/>=<sp/>{<sp/>{30,<sp/></highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Fall&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{40,<sp/></highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{50,<sp/></highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{20,<sp/></highlight><highlight class="stringliteral">&quot;Date&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Winter&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{10,<sp/></highlight><highlight class="stringliteral">&quot;Elderberry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Spring&quot;</highlight><highlight class="normal">}<sp/>};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>itemsToInsert)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertMinHeap(&amp;heap,<sp/>item);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>removeMin<sp/>will<sp/>trigger<sp/>the<sp/>scenario<sp/>where<sp/>the<sp/>last<sp/>item<sp/>is<sp/>reinserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>removeMin(&amp;heap);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>the<sp/>heap<sp/>property<sp/>is<sp/>maintained<sp/>after<sp/>reinsertion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parentIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftChildIndex<sp/>=<sp/>2<sp/>*<sp/>parentIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightChildIndex<sp/>=<sp/>2<sp/>*<sp/>parentIndex<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>both<sp/>children<sp/>are<sp/>now<sp/>larger<sp/>than<sp/>the<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(heap.items[parentIndex].price<sp/>&lt;=<sp/>heap.items[leftChildIndex].price);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(heap.items[parentIndex].price<sp/>&lt;=<sp/>heap.items[rightChildIndex].price);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>size<sp/>of<sp/>the<sp/>heap<sp/>is<sp/>decremented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(heap.size,<sp/>4);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="farmermarket__test_8cpp_1afef0ebaa25c43693845f3d0e26a81989" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>SaveProductSeasonTest)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/>productSeasons[3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{20,<sp/></highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Fall&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{10,<sp/></highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{15,<sp/></highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>testProductSeasonFilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestProductSeasons.bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saveResult<sp/>=<sp/>saveProductSeason(productSeasons,<sp/>3,<sp/>testProductSeasonFilename);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(saveResult,<sp/>1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>fopen(testProductSeasonFilename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(file<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numProductsRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;numProductsRead,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(numProductsRead,<sp/>3);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/>readProductSeasons[3];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(readProductSeasons,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ProductSeason),<sp/>numProductsRead,<sp/>file);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numProductsRead;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(readProductSeasons[i].price,<sp/>productSeasons[i].price);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>remove(testProductSeasonFilename);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="farmermarket__test_8cpp_1a3d8c1226d43c0acf6645111b873dbf3f" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>LoadProductSeasonsAndPrintTest)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>testLoadFilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestProductSeasonsLoad.bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ProductSeason<sp/>productSeasonsToSave[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{20,<sp/></highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Fall&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{10,<sp/></highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{15,<sp/></highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,<sp/></highlight><highlight class="stringliteral">&quot;Date&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Winter&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{8,<sp/></highlight><highlight class="stringliteral">&quot;Fig&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numProductsToSave<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(productSeasonsToSave)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ProductSeason);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>saveProductSeason(productSeasonsToSave,<sp/>numProductsToSave,<sp/>testLoadFilename);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>selectedSeason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Summer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>productsFound<sp/>=<sp/>loadProductSeasonsAndPrint(testLoadFilename,<sp/>selectedSeason);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(productsFound,<sp/>3);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>remove(testLoadFilename);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="farmermarket__test_8cpp_1aeb261d522e3e265754519a64186e00f9" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>SeasonalProduceGuideTest)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;invalid\n\n1\n\n2\n\n3\n\n4\n\n5\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>seasonalProduceGuide();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="farmermarket__test_8cpp_1ad3c209f4be3a8680078a7a37d301720f" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>LongestCommonSubsequenceTest)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>X[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AGGTAB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Y[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GXTXAYB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>strlen(X);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>strlen(Y);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>LCS<sp/>of<sp/>&quot;AGGTAB&quot;<sp/>and<sp/>&quot;GXTXAYB&quot;<sp/>is<sp/>&quot;GTAB&quot;<sp/>which<sp/>has<sp/>a<sp/>length<sp/>of<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lcsLength<sp/>=<sp/>lcs(X,<sp/>Y,<sp/>m,<sp/>n);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(lcsLength,<sp/>4);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>case<sp/>with<sp/>no<sp/>common<sp/>subsequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>A[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ABC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>B[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DEF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenA<sp/>=<sp/>strlen(A);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenB<sp/>=<sp/>strlen(B);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>lcsLength<sp/>=<sp/>lcs(A,<sp/>B,<sp/>lenA,<sp/>lenB);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(lcsLength,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>No<sp/>common<sp/>subsequence,<sp/>so<sp/>expect<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>case<sp/>with<sp/>one<sp/>string<sp/>being<sp/>a<sp/>subsequence<sp/>of<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>C[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ABC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>D[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ABDC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenC<sp/>=<sp/>strlen(C);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenD<sp/>=<sp/>strlen(D);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>lcsLength<sp/>=<sp/>lcs(C,<sp/>D,<sp/>lenC,<sp/>lenD);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(lcsLength,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>&quot;ABC&quot;<sp/>is<sp/>a<sp/>subsequence<sp/>of<sp/>&quot;AADC&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">/*TEST_F(FarmermarketTest,<sp/>CompareAndPrintLCSTest)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>season1[]<sp/>=<sp/>&quot;Summer&quot;;</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>season2[]<sp/>=<sp/>&quot;Summer&quot;;</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>name1[]<sp/>=<sp/>&quot;Watermelon&quot;;</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>name2[]<sp/>=<sp/>&quot;Melon&quot;;</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>price<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="414"><highlight class="comment"></highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/>bool<sp/>result<sp/>=<sp/>compareAndPrintLCS(season1,<sp/>season2,<sp/>name1,<sp/>name2,<sp/>price);</highlight></codeline>
<codeline lineno="416"><highlight class="comment"></highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>expectedOutput[]<sp/>=<sp/>&quot;|-<sp/>Name<sp/>1:<sp/>Watermelon,<sp/>Name<sp/>2:<sp/>Melon,<sp/>Price:<sp/>50\n&quot;;</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="419"><highlight class="comment"></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/>sizeof(actualOutput));</highlight></codeline>
<codeline lineno="421"><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPECT_STREQ(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="424"><highlight class="comment"></highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/>strcpy(season1,<sp/>&quot;Summer&quot;);</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/>strcpy(season2,<sp/>&quot;Winter&quot;);</highlight></codeline>
<codeline lineno="427"><highlight class="comment"></highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>compareAndPrintLCS(season1,<sp/>season2,<sp/>name1,<sp/>name2,<sp/>price);</highlight></codeline>
<codeline lineno="429"><highlight class="comment"></highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="431"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="farmermarket__test_8cpp_1a110bc9c8e32860e0726073783b8b54b9" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>MaxFunctionTest)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(10,<sp/>max(5,<sp/>10));<sp/></highlight><highlight class="comment">//<sp/>Test<sp/>where<sp/>second<sp/>parameter<sp/>is<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(10,<sp/>max(10,<sp/>5));<sp/></highlight><highlight class="comment">//<sp/>Test<sp/>where<sp/>first<sp/>parameter<sp/>is<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(5,<sp/>max(5,<sp/>5));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>where<sp/>both<sp/>parameters<sp/>are<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="farmermarket__test_8cpp_1a78f67239848368e8e362d88375680f85" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>KnapsackFunctionTest)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>W<sp/>=<sp/>50;<sp/></highlight><highlight class="comment">//<sp/>Total<sp/>weight<sp/>capacity<sp/>of<sp/>the<sp/>knapsack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wt[]<sp/>=<sp/>{<sp/>10,<sp/>20,<sp/>30<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Weights<sp/>of<sp/>the<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val[]<sp/>=<sp/>{<sp/>60,<sp/>100,<sp/>120<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Values<sp/>of<sp/>the<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val[0]);<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedItems[n];<sp/></highlight><highlight class="comment">//<sp/>To<sp/>store<sp/>the<sp/>selected<sp/>item<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(selectedItems,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(selectedItems));<sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>with<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxValue<sp/>=<sp/>knapsack(W,<sp/>wt,<sp/>val,<sp/>n,<sp/>selectedItems);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(maxValue,<sp/>0);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>items<sp/>array<sp/>has<sp/>the<sp/>correct<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(selectedItems[0],<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Item<sp/>1<sp/>(weight<sp/>10)<sp/>is<sp/>not<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(selectedItems[1],<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Item<sp/>2<sp/>(weight<sp/>20)<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(selectedItems[2],<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Item<sp/>3<sp/>(weight<sp/>30)<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="farmermarket__test_8cpp_1a9ceed4f000d7f31d569c84109c88231a" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>SuggestPurchasesTest)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>budget<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>suggestPurchases(budget);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>budget<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>suggestPurchases(budget);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(result);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="farmermarket__test_8cpp_1a5c4f4dc3e905a1c2a5f08ab7a46a0627" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>CompareProductsTest)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;Summer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>CompareProducts();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedOutput[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;|Products<sp/>at<sp/>the<sp/>same<sp/>price<sp/>as<sp/>Summer<sp/>season<sp/>products:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(actualOutput));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NE(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="farmermarket__test_8cpp_1aa96529e61b0a8dad1d9d360f14853cd8" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>CompareProductsTestInvalid)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;InvalidSeason\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>CompareProducts();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(result);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedOutput[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>season.<sp/>Please<sp/>enter<sp/>a<sp/>valid<sp/>season.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(actualOutput));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NE(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="farmermarket__test_8cpp_1a5c421f240eeb5b42eccf607e6f0bbbae" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>BuyProductsTest)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>budget<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;Apple\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>BuyProducts(budget);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedOutput[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>have<sp/>successfully<sp/>purchased&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(actualOutput));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NE(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="farmermarket__test_8cpp_1a0556d27bb7259cc11c5fb767413000a3" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>BuyProductsTestInvalid)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>budget<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;NonExistentProduct\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>BuyProducts(budget);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(result);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedOutput[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Product<sp/>not<sp/>found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(actualOutput));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NE(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="farmermarket__test_8cpp_1ae83270014b23af0216f9de9f1599edf4" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>BuyProductsTestLowBudget)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>budget<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;Apple\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>BuyProducts(budget);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(result);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedOutput[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>budget<sp/>to<sp/>buy<sp/>Apple<sp/>from&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(actualOutput));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NE(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="farmermarket__test_8cpp_1af80dcf981bb7cc245da621a2a2f7c30d" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>PurchasingTransactionsAndPriceComparisonMenuTest)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>guestMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\n\n2\n\n\n\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PurchasingTransactionsAndPriceComparison(guestMode);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="farmermarket__test_8cpp_1af55bb12ef566f5866bb6c2efcefe1719" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>PurchasingTransactionsAndPriceComparisonShoppingSuggestionGuestModeTest)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>guestMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\n\n\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PurchasingTransactionsAndPriceComparison(guestMode);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="farmermarket__test_8cpp_1a1d2cdc3dc4f5b6851e0cffc2cd38a68a" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>PurchasingTransactionsAndPriceComparisonBuyProductsTest)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>guestMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;3\n\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PurchasingTransactionsAndPriceComparison(guestMode);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="farmermarket__test_8cpp_1ad7b8343d08f6ca9ddc61e38922d26346" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>PurchasingTransactionsAndPriceComparisonBuyProductsGuestModeTest)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>guestMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;3\n\n\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PurchasingTransactionsAndPriceComparison(guestMode);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="farmermarket__test_8cpp_1af7b18f8370fb4050786f10606b114fe4" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>PurchasingTransactionsAndPriceComparisonInvalidOptionTest)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>guestMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;invalid\n\n4541515\n\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>PurchasingTransactionsAndPriceComparison(guestMode);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="farmermarket__test_8cpp_1a2955a6ed8421e045d723999f76256c7c" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>RecursiveMatrixMultiply)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A[<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>][<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1,<sp/>2,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3,<sp/>4,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B[<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>][<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,<sp/>6,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{7,<sp/>8,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>C[<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>][<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>]<sp/>=<sp/>{<sp/>{0}<sp/>};</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected[<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>][<ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{19,<sp/>22,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{43,<sp/>50,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>recursiveMatrixMultiply(A,<sp/>B,<sp/>C,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="farmermarket__test_8cpp_1a0240ac851181b84ac374872dc5434ee4" kindref="member">N</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(C[i][j],<sp/>expected[i][j]);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="farmermarket__test_8cpp_1aee23c79690fa02563c2aeee732487340" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>MemorizedRecursiveReuseTest)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensions[]<sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dimensions)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dimensions[0]);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>call<sp/>to<sp/>populate<sp/>dp<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstCallCost<sp/>=<sp/>MCM_MemorizedRecursive(dimensions,<sp/>1,<sp/>n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(firstCallCost,<sp/>18);<sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>result<sp/>of<sp/>the<sp/>first<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secondCallCost<sp/>=<sp/>MCM_MemorizedRecursive(dimensions,<sp/>1,<sp/>n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(secondCallCost,<sp/>18);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="farmermarket__test_8cpp_1ae5f3e43f158a4aeed81f3d697c3809ff" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>DynamicProgrammingTest)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensions[]<sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dimensions)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dimensions[0]);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minCost<sp/>=<sp/>MCM_DynamicProgramming(dimensions,<sp/>n);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(minCost,<sp/>18);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>minimum<sp/>cost<sp/>to<sp/>multiply<sp/>matrices<sp/>of<sp/>given<sp/>dimensions<sp/>[1,<sp/>2,<sp/>3,<sp/>4]<sp/>is<sp/>18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="farmermarket__test_8cpp_1a408513e058aee5942fb7ec99f99b1c7e" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>MarketInformationsTotalIncomeTest)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\n\n2\n\n3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>MarketInformations();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="farmermarket__test_8cpp_1acf7f0a5eb349293973db95166fa33d4f" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>MarketInformationsInvalidOptionTest)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;invalid\n\n525451\n\n3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>MarketInformations();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>expectedOutput[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>input,<sp/>please<sp/>enter<sp/>a<sp/>number.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actualOutput[100000];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>readOutput(outputTest,<sp/>actualOutput,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(actualOutput));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NE(expectedOutput,<sp/>actualOutput);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="farmermarket__test_8cpp_1a7b63c339253440690207c7108e5a3769" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>MainMenuTest)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>authenticationResult<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\n3\n2\n5\n3\n4\n4\n3\nasddsa\n\n151\n\n5\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>mainMenu(authenticationResult);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>resetStdinStdout();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(result);</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="farmermarket__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="farmermarket__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_FARMERMARKET_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::GTEST_FLAG(color)<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/farmermarket/farmermarket_test.cpp"/>
  </compounddef>
</doxygen>
