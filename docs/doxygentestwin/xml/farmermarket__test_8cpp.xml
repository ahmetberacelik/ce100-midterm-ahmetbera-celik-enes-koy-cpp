<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="farmermarket__test_8cpp" kind="file" language="C++">
    <compoundname>farmermarket_test.cpp</compoundname>
    <includes local="yes">gtest/gtest.h</includes>
    <includes local="yes">../../farmermarket/header/farmermarket.h</includes>
    <incdepgraph>
      <node id="3">
        <label>../../farmermarket/header/farmermarket.h</label>
      </node>
      <node id="1">
        <label>src/tests/farmermarket/farmermarket_test.cpp</label>
        <link refid="farmermarket__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_farmermarket_test" prot="public">FarmermarketTest</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, SaveandAuthenticateUserTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>SaveandAuthenticateUserTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="22" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a2e1a8b07125da8cff6b80524b7bb5502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, InvalidAuthenticateUserTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>InvalidAuthenticateUserTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="30" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a69eb778b615f6182f20273acc278bdb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, UserAuthenticationValidTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>UserAuthenticationValidTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="35" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="35" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ab0b2a7230b6cb4c2f37a2c9cd5a4c89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, UserAuthenticationInvalidTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>UserAuthenticationInvalidTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="50" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="50" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a878f021e915c35d5d2f8b06f2dc54edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, RegisterUserTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>RegisterUserTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="82" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="82" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a28a12b4da9a7077663fc7283bbdcdd24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, GuessModeTest)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>GuessModeTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="98" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1ae7c982fc717508062652ee3ffdfceeaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(FarmermarketTest, userAuthenticationMenuSelection)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref></type>
        </param>
        <param>
          <type>userAuthenticationMenuSelection</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="103" column="1" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="103" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="farmermarket__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>The main function of the test program. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command-line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of command-line argument strings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int The exit status of the program. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tests/farmermarket/farmermarket_test.cpp" line="133" column="5" bodyfile="src/tests/farmermarket/farmermarket_test.cpp" bodystart="133" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtest/gtest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../farmermarket/header/farmermarket.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_farmermarket_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6" refid="class_farmermarket_test_1a1e479597a8a64fede2bcf7e94e7c72a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="class_farmermarket_test_1a1e479597a8a64fede2bcf7e94e7c72a1" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="7" refid="class_farmermarket_test_1a8877e5804f1a5e01c751220092c3f2b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/><ref refid="class_farmermarket_test_1a8877e5804f1a5e01c751220092c3f2b5" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="8" refid="class_farmermarket_test_1ab41c0bee33799c143c4ba9cf4da9c9e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_farmermarket_test_1ab41c0bee33799c143c4ba9cf4da9c9e0" kindref="member">testFilename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestUsers.bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9" refid="class_farmermarket_test_1a3116c6bcff3d9a33df6730723959944e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a3116c6bcff3d9a33df6730723959944e" kindref="member">SetUp</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_farmermarket_test_1a1e479597a8a64fede2bcf7e94e7c72a1" kindref="member">out</ref>.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_farmermarket_test_1a1e479597a8a64fede2bcf7e94e7c72a1" kindref="member">out</ref>.clear();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13" refid="class_farmermarket_test_1a0016e959eca974c84485fabf4f0a46b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a0016e959eca974c84485fabf4f0a46b8" kindref="member">TearDown</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove(<ref refid="class_farmermarket_test_1ab41c0bee33799c143c4ba9cf4da9c9e0" kindref="member">testFilename</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16" refid="class_farmermarket_test_1a3467495d8194e943a33692051b9f12c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_farmermarket_test_1a3467495d8194e943a33692051b9f12c7" kindref="member">simulateUserInput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_farmermarket_test_1a8877e5804f1a5e01c751220092c3f2b5" kindref="member">in</ref>.str(input);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_farmermarket_test_1a8877e5804f1a5e01c751220092c3f2b5" kindref="member">in</ref>.clear();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>SaveandAuthenticateUserTest)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>User<sp/>testUser<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;TestUser&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>saveUser(&amp;testUser,<sp/>testFilename);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result2<sp/>=<sp/>authenticateUser(</highlight><highlight class="stringliteral">&quot;TestUser&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal">,<sp/>testFilename);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(result2,<sp/>1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(result,<sp/>1);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="farmermarket__test_8cpp_1a2e1a8b07125da8cff6b80524b7bb5502" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>InvalidAuthenticateUserTest)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result2<sp/>=<sp/>authenticateUser(</highlight><highlight class="stringliteral">&quot;TestUser&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal">,<sp/>testFilename);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(result2,<sp/>-1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="farmermarket__test_8cpp_1a69eb778b615f6182f20273acc278bdb0" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>UserAuthenticationValidTest)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\nAhmet<sp/>Bera<sp/>Celik\nqwerty\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(userAuthentication(in,<sp/>out));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>expectedOutput<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>username:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>password:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>Ahmet<sp/>Bera<sp/>Celik\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedOutput,<sp/>out.str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="farmermarket__test_8cpp_1ab0b2a7230b6cb4c2f37a2c9cd5a4c89b" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>UserAuthenticationInvalidTest)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1\nInvalid<sp/>User\nqwerty\n1\nInvalid<sp/>User\nqwerty\n1\nInvalid<sp/>User\nqwerty\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(userAuthentication(in,<sp/>out));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>expectedOutput<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>username:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>password:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>entered<sp/>wrong<sp/>username<sp/>or<sp/>password.<sp/>Please<sp/>try<sp/>again.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>username:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>password:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>entered<sp/>wrong<sp/>username<sp/>or<sp/>password.<sp/>Please<sp/>try<sp/>again.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>username:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>password:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>entered<sp/>wrong<sp/>username<sp/>or<sp/>password.<sp/>Please<sp/>try<sp/>again.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>have<sp/>run<sp/>out<sp/>of<sp/>login<sp/>attempts.<sp/>See<sp/>you...\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedOutput,<sp/>out.str());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="farmermarket__test_8cpp_1a878f021e915c35d5d2f8b06f2dc54edb" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>RegisterUserTest)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;2\nAbuzer\n616161\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(userAuthentication(in,<sp/>out));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>expectedOutput<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>username:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>password:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>registered<sp/>successfully.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>Abuzer\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedOutput,<sp/>out.str());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="farmermarket__test_8cpp_1a28a12b4da9a7077663fc7283bbdcdd24" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>GuessModeTest)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;3\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(userAuthentication(in,<sp/>out));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="farmermarket__test_8cpp_1ae7c982fc717508062652ee3ffdfceeaa" refkind="member"><highlight class="normal"><ref refid="farmermarket__test_8cpp_1a9f96c9e5ef0c2a3087b85ca7938fd199" kindref="member">TEST_F</ref>(<ref refid="class_farmermarket_test" kindref="compound">FarmermarketTest</ref>,<sp/>userAuthenticationMenuSelection)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>simulateUserInput(</highlight><highlight class="stringliteral">&quot;1213213\nasdasd\n4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(userAuthentication(in,<sp/>out));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>expectedOutput<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>option,<sp/>please<sp/>try<sp/>again.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>input,<sp/>please<sp/>enter<sp/>a<sp/>number.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;1.<sp/>Login\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;2.<sp/>Register\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;3.<sp/>Guest<sp/>Mode\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;4.<sp/>Exit<sp/>Program\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>select<sp/>an<sp/>option:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>expectedOutput<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Exiting<sp/>program...\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedOutput,<sp/>out.str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133" refid="farmermarket__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="farmermarket__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_FARMERMARKET_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tests/farmermarket/farmermarket_test.cpp"/>
  </compounddef>
</doxygen>
